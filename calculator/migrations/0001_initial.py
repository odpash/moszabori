# Generated by Django 3.2.9 on 2022-05-29 15:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProfnastilEdinicaIzmereniya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, help_text='Введите единица измерения', max_length=100, null=True, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': '[Profnastil] Единица измерении',
            },
        ),
        migrations.CreateModel(
            name='ProfnastilKraska',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, help_text='Введите названия покрытия', max_length=100, null=True, verbose_name='Название покрытия')),
                ('kolichestvo', models.DecimalField(blank=True, decimal_places=2, default=1.0, help_text='Количество', max_digits=10, null=True, verbose_name='Количество')),
                ('edIzmer', models.CharField(blank=True, choices=[('1', 'пм')], default='1', help_text='Выберите толшину покрытия', max_length=20, null=True, verbose_name='Единица Измерения')),
                ('cena', models.DecimalField(blank=True, decimal_places=2, default=400.0, help_text='Цена', max_digits=10, null=True, verbose_name='Цена единицы')),
            ],
            options={
                'verbose_name': 'Краска',
                'verbose_name_plural': '[Profnastil] Краски',
            },
        ),
        migrations.CreateModel(
            name='ProfnastilLaborCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workType', models.CharField(blank=True, choices=[('ustZaborProfnast', 'Установка забора из профнастиля'), ('drugoe', 'Другое')], default='drugoe', help_text='Выберите тип', max_length=20, null=True, verbose_name='Тип работы')),
                ('Title', models.CharField(blank=True, help_text='Введите названия работы', max_length=100, null=True, verbose_name='Название работы')),
                ('kolichestvo', models.DecimalField(blank=True, decimal_places=2, default=1.0, help_text='Количество', max_digits=10, null=True, verbose_name='Количество')),
                ('edIzmer', models.CharField(blank=True, choices=[('1', 'пм'), ('2', 'упак'), ('3', 'компл'), ('4', 'шт')], default='1', help_text='Выберите единицу', max_length=20, null=True, verbose_name='Единица Измерения')),
                ('param1', models.CharField(blank=True, help_text='Например, высоту: 1.5', max_length=10, null=True, verbose_name='Параметр 1')),
                ('param2', models.CharField(blank=True, help_text='Например, ширину: 2.5', max_length=10, null=True, verbose_name='Параметр 2')),
                ('param3', models.CharField(blank=True, help_text='Например, толшину: 0.30', max_length=10, null=True, verbose_name='Параметр 3')),
                ('cena', models.DecimalField(blank=True, decimal_places=2, default=400.0, help_text='Цена', max_digits=10, null=True, verbose_name='Цена единицы')),
                ('Slug', models.CharField(blank=True, help_text='Введите ссылку. Нельзя изменить! ', max_length=20, null=True, verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Стоимость работы',
                'verbose_name_plural': '[Profnastil] Стоимость работы',
            },
        ),
        migrations.CreateModel(
            name='ProfnastilPokritie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, help_text='Введите названия покрытия', max_length=100, null=True, verbose_name='Название покрытия')),
                ('marka', models.CharField(blank=True, choices=[('1', 'C')], default='1', help_text='Выберите толшину покрытия', max_length=20, null=True, verbose_name='Марка')),
                ('kolVolna', models.CharField(blank=True, choices=[('1', '8'), ('2', '20'), ('3', '21')], default='1', help_text='Выберите количество волн', max_length=20, null=True, verbose_name='Кол. волны')),
                ('tolshina', models.CharField(blank=True, choices=[('1', '0.30'), ('2', '0.35'), ('3', '0.40'), ('4', '0.45'), ('5', '0.50')], default='1', help_text='Выберите толшину покрытия', max_length=20, null=True, verbose_name='Толшина')),
                ('kraska', models.CharField(blank=True, choices=[('1', 'односторонный'), ('2', 'двусторонный'), ('3', 'оцинкованный')], default='1', help_text='Выберите толшину покрытия', max_length=20, null=True, verbose_name='Краска')),
                ('kolichestvo', models.IntegerField(blank=True, default=1, help_text='Количество', null=True, verbose_name='Количество')),
                ('edIzmer', models.CharField(blank=True, choices=[('1', 'м2')], default='1', help_text='Выберите толшину покрытия', max_length=20, null=True, verbose_name='Единица Измерения')),
                ('cena', models.IntegerField(blank=True, default=0, help_text='Цена', null=True, verbose_name='Цена единицы')),
            ],
            options={
                'verbose_name': 'Тип покрытие',
                'verbose_name_plural': '[Profnastil] Тип покрытия',
            },
        ),
        migrations.CreateModel(
            name='ProfnastilSechenieStolba',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, help_text='Введите сечение столбы', max_length=100, null=True, verbose_name='Сечение столбы')),
                ('edIzmereniya', models.CharField(blank=True, help_text='Введите единицу измерения', max_length=100, null=True, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Сечение столб',
                'verbose_name_plural': '[Profnastil] Сечение столбы',
            },
        ),
        migrations.CreateModel(
            name='ProfnastilServicesAndMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smtip', models.CharField(blank=True, choices=[('beton', 'Бетонирование'), ('utrambovka', 'Утрамбовка'), ('gruntovka', 'Грунтовка'), ('lagi', 'Лаги'), ('zaglushka', 'Заглушка'), ('zamosrezi', 'Саморезы'), ('planka', 'Планка'), ('kalitka', 'Калитка'), ('vorota', 'Ворота'), ('rabota', 'Работа'), ('drugoe', 'Другое')], default='drugoe', help_text='Выберите тип', max_length=20, null=True, verbose_name='Тип услуги/материала')),
                ('Title', models.CharField(blank=True, help_text='Введите названия усгули или материала', max_length=100, null=True, verbose_name='Название усгули или материала')),
                ('kolichestvo', models.DecimalField(blank=True, decimal_places=2, default=1.0, help_text='Количество', max_digits=10, null=True, verbose_name='Количество')),
                ('edIzmer', models.CharField(blank=True, choices=[('1', 'пм'), ('2', 'упак'), ('3', 'компл'), ('4', 'шт')], default='1', help_text='Выберите единицу', max_length=20, null=True, verbose_name='Единица Измерения')),
                ('param1', models.CharField(blank=True, help_text='Например, высоту: 1.5', max_length=10, null=True, verbose_name='Параметр 1')),
                ('param2', models.CharField(blank=True, help_text='Например, ширину: 2.5', max_length=10, null=True, verbose_name='Параметр 2')),
                ('param3', models.CharField(blank=True, help_text='Например, толшину: 0.30', max_length=10, null=True, verbose_name='Параметр 3')),
                ('cena', models.DecimalField(blank=True, decimal_places=2, default=400.0, help_text='Цена', max_digits=10, null=True, verbose_name='Цена единицы')),
                ('Slug', models.CharField(blank=True, help_text='Введите ссылку. Нельзя изменить! ', max_length=20, null=True, unique=True, verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Другой  материал',
                'verbose_name_plural': '[Profnastil] Другие материалы',
            },
        ),
        migrations.CreateModel(
            name='ProfnastilTipStolba',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, help_text='Введите тип столбы', max_length=100, null=True, verbose_name='Тип/Наименование столбы')),
            ],
            options={
                'verbose_name': 'Тип столб',
                'verbose_name_plural': '[Profnastil] Тип столба',
            },
        ),
        migrations.CreateModel(
            name='ProfnastilTolshinaStolba',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, help_text='Введите толшина столбы', max_length=100, null=True, verbose_name='Толшина столбы')),
                ('edIzmereniya', models.CharField(blank=True, help_text='Введите единицу измерения толшина столбы', max_length=100, null=True, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Толшина столб',
                'verbose_name_plural': '[Profnastil] Толшина столбы',
            },
        ),
        migrations.CreateModel(
            name='Rabizaarmatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Цена')),
            ],
            options={
                'verbose_name': '[Rabiza] Арматура',
                'verbose_name_plural': '[Rabiza] Арматура',
            },
        ),
        migrations.CreateModel(
            name='Rabizadlinastolbov',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visota', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Высота столба')),
                ('tolshina', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Толщина столба')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Цена конфигурации')),
            ],
            options={
                'verbose_name': '[Rabiza] Цена столбов',
                'verbose_name_plural': '[Rabiza] Цена столбов',
            },
        ),
        migrations.CreateModel(
            name='Rabizakalitka',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visota', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Высота')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Цена')),
            ],
            options={
                'verbose_name': '[Rabiza] Калитка',
                'verbose_name_plural': '[Rabiza] Калитка',
            },
        ),
        migrations.CreateModel(
            name='Rabizapokraska',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tip', models.CharField(max_length=100, verbose_name='Тип краски')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Цена')),
                ('kolvo', models.DecimalField(decimal_places=5, max_digits=100, verbose_name='Количество краски на метр')),
            ],
            options={
                'verbose_name': '[Rabiza] Покраска',
                'verbose_name_plural': '[Rabiza] Покраска',
            },
        ),
        migrations.CreateModel(
            name='Rabizasetka',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tolshina', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Толщина сетки')),
                ('visota', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Высота забора')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Цена')),
            ],
            options={
                'verbose_name': '[Rabiza] Сетка',
                'verbose_name_plural': '[Rabiza] Сетка',
            },
        ),
        migrations.CreateModel(
            name='Rabizavorota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visota', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Высота')),
                ('shirina', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Ширина')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Цена')),
            ],
            options={
                'verbose_name': '[Rabiza] Ворота',
                'verbose_name_plural': '[Rabiza] Ворота',
            },
        ),
        migrations.CreateModel(
            name='Rabizaystanovkakalitki',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Цена')),
            ],
            options={
                'verbose_name': '[Rabiza] Установка калитки',
                'verbose_name_plural': '[Rabiza] Установка калитки',
            },
        ),
        migrations.CreateModel(
            name='Rabizaystanovkavorot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Цена за установку ворот')),
            ],
            options={
                'verbose_name': '[Rabiza] Цена за установку ворот',
                'verbose_name_plural': '[Rabiza] Цена за установку ворот',
            },
        ),
        migrations.CreateModel(
            name='Rabizaystanovkazabora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Начало промежутка')),
                ('end', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Конец промежутка')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Цена за установку забора')),
            ],
            options={
                'verbose_name': '[Rabiza] Цена за установку забора',
                'verbose_name_plural': '[Rabiza] Цена за установку забора',
            },
        ),
        migrations.CreateModel(
            name='ProfnastilStolba',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kolichestvo', models.IntegerField(blank=True, default=0, help_text='Количество', null=True, verbose_name='Количество')),
                ('cena', models.IntegerField(blank=True, default=0, help_text='Цена', null=True, verbose_name='Цена единицы')),
                ('edinicaIzmereniya', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='calculator.profnastiledinicaizmereniya')),
                ('sechenieStolba', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='calculator.profnastilsecheniestolba')),
                ('tipStolba', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='calculator.profnastiltipstolba')),
                ('tolshinaStolba', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='calculator.profnastiltolshinastolba')),
            ],
            options={
                'verbose_name': 'Столба',
                'verbose_name_plural': '[Profnastil] Столбы',
            },
        ),
    ]
